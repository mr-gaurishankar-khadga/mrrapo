{"ast":null,"code":"var _jsxFileName = \"D:\\\\useless\\\\eco\\\\frontend\\\\src\\\\Globle.js\",\n  _s = $RefreshSig$();\n// src/components/Globe.js\nimport React, { useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, Sphere } from '@react-three/drei';\nimport { TextureLoader } from 'three';\nimport EarthTexture from './download.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpinningGlobe = () => {\n  _s();\n  const earthRef = useRef();\n\n  // Rotation animation\n  useFrame(() => {\n    earthRef.current.rotation.y += 0.005;\n  });\n  const texture = new TextureLoader().load(EarthTexture);\n  return /*#__PURE__*/_jsxDEV(Sphere, {\n    ref: earthRef,\n    args: [1, 100, 200],\n    scale: 2.5,\n    children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      map: texture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(SpinningGlobe, \"XuNVB/mCrmTpMPxHY2Hxwc/XPlQ=\", false, function () {\n  return [useFrame];\n});\n_c = SpinningGlobe;\nconst Globe = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(OrbitControls, {\n      enableZoom: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [2, 5, 2],\n      intensity: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpinningGlobe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Globe;\nexport default Globe;\nvar _c, _c2;\n$RefreshReg$(_c, \"SpinningGlobe\");\n$RefreshReg$(_c2, \"Globe\");","map":{"version":3,"names":["React","useRef","Canvas","useFrame","OrbitControls","Sphere","TextureLoader","EarthTexture","jsxDEV","_jsxDEV","SpinningGlobe","_s","earthRef","current","rotation","y","texture","load","ref","args","scale","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","Globe","enableZoom","intensity","position","_c2","$RefreshReg$"],"sources":["D:/useless/eco/frontend/src/Globle.js"],"sourcesContent":["// src/components/Globe.js\r\nimport React, { useRef } from 'react';\r\nimport { Canvas, useFrame } from '@react-three/fiber';\r\nimport { OrbitControls, Sphere } from '@react-three/drei';\r\nimport { TextureLoader } from 'three';\r\nimport EarthTexture from './download.';\r\n\r\nconst SpinningGlobe = () => {\r\n  const earthRef = useRef();\r\n\r\n  // Rotation animation\r\n  useFrame(() => {\r\n    earthRef.current.rotation.y += 0.005;\r\n  });\r\n\r\n  const texture = new TextureLoader().load(EarthTexture);\r\n\r\n  return (\r\n    <Sphere ref={earthRef} args={[1, 100, 200]} scale={2.5}>\r\n      <meshStandardMaterial map={texture} />\r\n    </Sphere>\r\n  );\r\n};\r\n\r\nconst Globe = () => {\r\n  return (\r\n    <Canvas>\r\n      <OrbitControls enableZoom={false} />\r\n      <ambientLight intensity={0.5} />\r\n      <directionalLight position={[2, 5, 2]} intensity={1} />\r\n      \r\n      {/* Render the SpinningGlobe component within the Canvas */}\r\n      <SpinningGlobe />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default Globe;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AACrD,SAASC,aAAa,EAAEC,MAAM,QAAQ,mBAAmB;AACzD,SAASC,aAAa,QAAQ,OAAO;AACrC,OAAOC,YAAY,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGX,MAAM,CAAC,CAAC;;EAEzB;EACAE,QAAQ,CAAC,MAAM;IACbS,QAAQ,CAACC,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,KAAK;EACtC,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAG,IAAIV,aAAa,CAAC,CAAC,CAACW,IAAI,CAACV,YAAY,CAAC;EAEtD,oBACEE,OAAA,CAACJ,MAAM;IAACa,GAAG,EAAEN,QAAS;IAACO,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAE;IAACC,KAAK,EAAE,GAAI;IAAAC,QAAA,eACrDZ,OAAA;MAAsBa,GAAG,EAAEN;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEb,CAAC;AAACf,EAAA,CAfID,aAAa;EAAA,QAIjBP,QAAQ;AAAA;AAAAwB,EAAA,GAJJjB,aAAa;AAiBnB,MAAMkB,KAAK,GAAGA,CAAA,KAAM;EAClB,oBACEnB,OAAA,CAACP,MAAM;IAAAmB,QAAA,gBACLZ,OAAA,CAACL,aAAa;MAACyB,UAAU,EAAE;IAAM;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpCjB,OAAA;MAAcqB,SAAS,EAAE;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCjB,OAAA;MAAkBsB,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAACD,SAAS,EAAE;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGvDjB,OAAA,CAACC,aAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEb,CAAC;AAACM,GAAA,GAXIJ,KAAK;AAaX,eAAeA,KAAK;AAAC,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}