{"ast":null,"code":"var _jsxFileName = \"D:\\\\useless\\\\eco - Copy (2) - Copy\\\\frontend\\\\src\\\\CreateAccount\\\\ForgotPasswordModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ForgotPasswordModal.css';\nimport Logo from './images/logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPasswordModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [showOtpModal, setShowOtpModal] = useState(false);\n  const [otp, setOtp] = useState('');\n  const handleSubmit = () => {\n    // Here you can add the logic to send the OTP to the entered email\n    console.log(\"Sending OTP to:\", email);\n\n    // Show the OTP modal after submission\n    setShowOtpModal(true);\n  };\n  const handleVerifyOtp = () => {\n    // Here you can add the logic to verify the entered OTP\n    console.log(\"Verifying OTP:\", otp);\n    // Close the OTP modal after verification\n    setShowOtpModal(false);\n    // You can also close the main modal if needed\n    onClose();\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"Logo\",\n          className: \"modal-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"modal-title\",\n          style: {\n            fontFamily: 'Twentieth Century sans-serif'\n          },\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          className: \"modal-input\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-button close-button\",\n            onClick: onClose,\n            style: {\n              fontFamily: 'Twentieth Century sans-serif'\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-button submit-button\",\n            onClick: handleSubmit,\n            style: {\n              fontFamily: 'Twentieth Century sans-serif'\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), showOtpModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-title\",\n          style: {\n            fontFamily: 'Twentieth Century sans-serif'\n          },\n          children: \"Enter OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your OTP\",\n          className: \"modal-input\",\n          value: otp,\n          onChange: e => setOtp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-button close-button\",\n            onClick: () => setShowOtpModal(false),\n            style: {\n              fontFamily: 'Twentieth Century sans-serif'\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-button submit-button\",\n            onClick: handleVerifyOtp,\n            style: {\n              fontFamily: 'Twentieth Century sans-serif'\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(ForgotPasswordModal, \"LcsE+wWHnBswlznkuaWTIPBjZrI=\");\n_c = ForgotPasswordModal;\nexport default ForgotPasswordModal;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordModal\");","map":{"version":3,"names":["React","useState","Logo","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPasswordModal","isOpen","onClose","_s","email","setEmail","showOtpModal","setShowOtpModal","otp","setOtp","handleSubmit","console","log","handleVerifyOtp","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","fontFamily","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/useless/eco - Copy (2) - Copy/frontend/src/CreateAccount/ForgotPasswordModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ForgotPasswordModal.css';\r\nimport Logo from './images/logo.png';\r\n\r\nconst ForgotPasswordModal = ({ isOpen, onClose }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [showOtpModal, setShowOtpModal] = useState(false);\r\n    const [otp, setOtp] = useState('');\r\n\r\n    const handleSubmit = () => {\r\n        // Here you can add the logic to send the OTP to the entered email\r\n        console.log(\"Sending OTP to:\", email);\r\n        \r\n        // Show the OTP modal after submission\r\n        setShowOtpModal(true);\r\n    };\r\n\r\n    const handleVerifyOtp = () => {\r\n        // Here you can add the logic to verify the entered OTP\r\n        console.log(\"Verifying OTP:\", otp);\r\n        // Close the OTP modal after verification\r\n        setShowOtpModal(false);\r\n        // You can also close the main modal if needed\r\n        onClose();\r\n    };\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"modal-overlay\">\r\n                <div className=\"modal-container\">\r\n                    <img src={Logo} alt=\"Logo\" className=\"modal-logo\" />\r\n                    <h2 className=\"modal-title\" style={{ fontFamily: 'Twentieth Century sans-serif' }}>Forgot Password</h2>\r\n                    <input \r\n                        type=\"email\" \r\n                        placeholder=\"Enter your email\" \r\n                        className=\"modal-input\" \r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                    <div className=\"modal-buttons\">\r\n                        <button className=\"modal-button close-button\" onClick={onClose} style={{ fontFamily: 'Twentieth Century sans-serif' }}>\r\n                            Close\r\n                        </button>\r\n                        \r\n                        <button className=\"modal-button submit-button\" onClick={handleSubmit} style={{ fontFamily: 'Twentieth Century sans-serif' }}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {showOtpModal && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-container\">\r\n                        <h3 className=\"modal-title\" style={{ fontFamily: 'Twentieth Century sans-serif' }}>Enter OTP</h3>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Enter your OTP\" \r\n                            className=\"modal-input\" \r\n                            value={otp}\r\n                            onChange={(e) => setOtp(e.target.value)}\r\n                        />\r\n                        <div className=\"modal-buttons\">\r\n                            <button className=\"modal-button close-button\" onClick={() => setShowOtpModal(false)} style={{ fontFamily: 'Twentieth Century sans-serif' }}>\r\n                                Close\r\n                            </button>\r\n                            \r\n                            <button className=\"modal-button submit-button\" onClick={handleVerifyOtp} style={{ fontFamily: 'Twentieth Century sans-serif' }}>\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgotPasswordModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}